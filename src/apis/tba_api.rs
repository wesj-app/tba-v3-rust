/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use reqwest::{Client, Response, RequestBuilder};

use crate::{Error, configuration};

pub struct TBAApiClient {
    configuration: Rc<configuration::Configuration>,
}

impl TBAApiClient {
    pub fn new(configuration: Rc<configuration::Configuration>) -> TBAApiClient {
        TBAApiClient {
            configuration,
        }
    }
}

impl TBAApiClient {
    pub async fn get_status(&self, if_modified_since: Option<&str>) -> Result<crate::models::ApiStatus, Error> {
        let configuration: &configuration::Configuration = self.configuration.borrow();
        let client = &configuration.client;

        let uri_str = format!("{}/status", configuration.base_path);
        let mut req_builder: RequestBuilder = client.get(uri_str.as_str());

        if let Some(ref user_agent) = configuration.user_agent {
            req_builder = req_builder.header(reqwest::header::USER_AGENT, user_agent.clone());
        }
        if let Some(param_value) = if_modified_since {
            req_builder = req_builder.header("If-Modified-Since", param_value.to_string());
        }
        if let Some(ref apikey) = configuration.api_key {
            let key = apikey.key.clone();
            let val = match apikey.prefix {
                Some(ref prefix) => format!("{} {}", prefix, key),
                None => key,
            };
            req_builder = req_builder.header("X-TBA-Auth-Key", val);
        };

        // send request
        let req = req_builder.build()?;

        //Ok(client.execute(req).await?.json().await?)
        Ok(client.execute(req).await?.error_for_status()?.json().await?)
    }

}
