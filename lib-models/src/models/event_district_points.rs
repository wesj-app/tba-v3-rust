/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventDistrictPoints {
    /// Points gained for each team at the event. Stored as a key-value pair with the team key as the key, and an object describing the points as its value.
    #[serde(rename = "points")]
    pub points: ::std::collections::HashMap<String, crate::models::EventDistrictPointsPoints>,
    /// Tiebreaker values for each team at the event. Stored as a key-value pair with the team key as the key, and an object describing the tiebreaker elements as its value.
    #[serde(rename = "tiebreakers", skip_serializing_if = "Option::is_none")]
    pub tiebreakers:
        Option<::std::collections::HashMap<String, crate::models::EventDistrictPointsTiebreakers>>,
}

impl EventDistrictPoints {
    pub fn new(
        points: ::std::collections::HashMap<String, crate::models::EventDistrictPointsPoints>,
    ) -> EventDistrictPoints {
        EventDistrictPoints {
            points,
            tiebreakers: None,
        }
    }
}
