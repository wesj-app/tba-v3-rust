/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchScoreBreakdown2015Alliance {
    #[serde(rename = "auto_points", skip_serializing_if = "Option::is_none")]
    pub auto_points: Option<i32>,
    #[serde(rename = "teleop_points", skip_serializing_if = "Option::is_none")]
    pub teleop_points: Option<i32>,
    #[serde(rename = "container_points", skip_serializing_if = "Option::is_none")]
    pub container_points: Option<i32>,
    #[serde(rename = "tote_points", skip_serializing_if = "Option::is_none")]
    pub tote_points: Option<i32>,
    #[serde(rename = "litter_points", skip_serializing_if = "Option::is_none")]
    pub litter_points: Option<i32>,
    #[serde(rename = "foul_points", skip_serializing_if = "Option::is_none")]
    pub foul_points: Option<i32>,
    #[serde(rename = "adjust_points", skip_serializing_if = "Option::is_none")]
    pub adjust_points: Option<i32>,
    #[serde(rename = "total_points", skip_serializing_if = "Option::is_none")]
    pub total_points: Option<i32>,
    #[serde(rename = "foul_count", skip_serializing_if = "Option::is_none")]
    pub foul_count: Option<i32>,
    #[serde(rename = "tote_count_far", skip_serializing_if = "Option::is_none")]
    pub tote_count_far: Option<i32>,
    #[serde(rename = "tote_count_near", skip_serializing_if = "Option::is_none")]
    pub tote_count_near: Option<i32>,
    #[serde(rename = "tote_set", skip_serializing_if = "Option::is_none")]
    pub tote_set: Option<bool>,
    #[serde(rename = "tote_stack", skip_serializing_if = "Option::is_none")]
    pub tote_stack: Option<bool>,
    #[serde(
        rename = "container_count_level1",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level1: Option<i32>,
    #[serde(
        rename = "container_count_level2",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level2: Option<i32>,
    #[serde(
        rename = "container_count_level3",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level3: Option<i32>,
    #[serde(
        rename = "container_count_level4",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level4: Option<i32>,
    #[serde(
        rename = "container_count_level5",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level5: Option<i32>,
    #[serde(
        rename = "container_count_level6",
        skip_serializing_if = "Option::is_none"
    )]
    pub container_count_level6: Option<i32>,
    #[serde(rename = "container_set", skip_serializing_if = "Option::is_none")]
    pub container_set: Option<bool>,
    #[serde(
        rename = "litter_count_container",
        skip_serializing_if = "Option::is_none"
    )]
    pub litter_count_container: Option<i32>,
    #[serde(
        rename = "litter_count_landfill",
        skip_serializing_if = "Option::is_none"
    )]
    pub litter_count_landfill: Option<i32>,
    #[serde(
        rename = "litter_count_unprocessed",
        skip_serializing_if = "Option::is_none"
    )]
    pub litter_count_unprocessed: Option<i32>,
    #[serde(rename = "robot_set", skip_serializing_if = "Option::is_none")]
    pub robot_set: Option<bool>,
}

impl MatchScoreBreakdown2015Alliance {
    pub fn new() -> MatchScoreBreakdown2015Alliance {
        MatchScoreBreakdown2015Alliance {
            auto_points: None,
            teleop_points: None,
            container_points: None,
            tote_points: None,
            litter_points: None,
            foul_points: None,
            adjust_points: None,
            total_points: None,
            foul_count: None,
            tote_count_far: None,
            tote_count_near: None,
            tote_set: None,
            tote_stack: None,
            container_count_level1: None,
            container_count_level2: None,
            container_count_level3: None,
            container_count_level4: None,
            container_count_level5: None,
            container_count_level6: None,
            container_set: None,
            litter_count_container: None,
            litter_count_landfill: None,
            litter_count_unprocessed: None,
            robot_set: None,
        }
    }
}
