/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchScoreBreakdown2020Alliance {
    #[serde(rename = "initLineRobot1", skip_serializing_if = "Option::is_none")]
    pub init_line_robot1: Option<String>,
    #[serde(rename = "endgameRobot1", skip_serializing_if = "Option::is_none")]
    pub endgame_robot1: Option<String>,
    #[serde(rename = "initLineRobot2", skip_serializing_if = "Option::is_none")]
    pub init_line_robot2: Option<String>,
    #[serde(rename = "endgameRobot2", skip_serializing_if = "Option::is_none")]
    pub endgame_robot2: Option<String>,
    #[serde(rename = "initLineRobot3", skip_serializing_if = "Option::is_none")]
    pub init_line_robot3: Option<String>,
    #[serde(rename = "endgameRobot3", skip_serializing_if = "Option::is_none")]
    pub endgame_robot3: Option<String>,
    #[serde(rename = "autoCellsBottom", skip_serializing_if = "Option::is_none")]
    pub auto_cells_bottom: Option<i32>,
    #[serde(rename = "autoCellsOuter", skip_serializing_if = "Option::is_none")]
    pub auto_cells_outer: Option<i32>,
    #[serde(rename = "autoCellsInner", skip_serializing_if = "Option::is_none")]
    pub auto_cells_inner: Option<i32>,
    #[serde(rename = "teleopCellsBottom", skip_serializing_if = "Option::is_none")]
    pub teleop_cells_bottom: Option<i32>,
    #[serde(rename = "teleopCellsOuter", skip_serializing_if = "Option::is_none")]
    pub teleop_cells_outer: Option<i32>,
    #[serde(rename = "teleopCellsInner", skip_serializing_if = "Option::is_none")]
    pub teleop_cells_inner: Option<i32>,
    #[serde(rename = "stage1Activated", skip_serializing_if = "Option::is_none")]
    pub stage1_activated: Option<bool>,
    #[serde(rename = "stage2Activated", skip_serializing_if = "Option::is_none")]
    pub stage2_activated: Option<bool>,
    #[serde(rename = "stage3Activated", skip_serializing_if = "Option::is_none")]
    pub stage3_activated: Option<bool>,
    #[serde(rename = "stage3TargetColor", skip_serializing_if = "Option::is_none")]
    pub stage3_target_color: Option<String>,
    #[serde(rename = "endgameRungIsLevel", skip_serializing_if = "Option::is_none")]
    pub endgame_rung_is_level: Option<String>,
    #[serde(rename = "autoInitLinePoints", skip_serializing_if = "Option::is_none")]
    pub auto_init_line_points: Option<i32>,
    #[serde(rename = "autoCellPoints", skip_serializing_if = "Option::is_none")]
    pub auto_cell_points: Option<i32>,
    #[serde(rename = "autoPoints", skip_serializing_if = "Option::is_none")]
    pub auto_points: Option<i32>,
    #[serde(rename = "teleopCellPoints", skip_serializing_if = "Option::is_none")]
    pub teleop_cell_points: Option<i32>,
    #[serde(rename = "controlPanelPoints", skip_serializing_if = "Option::is_none")]
    pub control_panel_points: Option<i32>,
    #[serde(rename = "endgamePoints", skip_serializing_if = "Option::is_none")]
    pub endgame_points: Option<i32>,
    #[serde(rename = "teleopPoints", skip_serializing_if = "Option::is_none")]
    pub teleop_points: Option<i32>,
    #[serde(
        rename = "shieldOperationalRankingPoint",
        skip_serializing_if = "Option::is_none"
    )]
    pub shield_operational_ranking_point: Option<bool>,
    #[serde(
        rename = "shieldEnergizedRankingPoint",
        skip_serializing_if = "Option::is_none"
    )]
    pub shield_energized_ranking_point: Option<bool>,
    /// Unofficial TBA-computed value that indicates whether the shieldEnergizedRankingPoint was earned normally or awarded due to a foul.
    #[serde(
        rename = "tba_shieldEnergizedRankingPointFromFoul",
        skip_serializing_if = "Option::is_none"
    )]
    pub tba_shield_energized_ranking_point_from_foul: Option<bool>,
    /// Unofficial TBA-computed value that counts the number of robots who were hanging at the end of the match.
    #[serde(
        rename = "tba_numRobotsHanging",
        skip_serializing_if = "Option::is_none"
    )]
    pub tba_num_robots_hanging: Option<i32>,
    #[serde(rename = "foulCount", skip_serializing_if = "Option::is_none")]
    pub foul_count: Option<i32>,
    #[serde(rename = "techFoulCount", skip_serializing_if = "Option::is_none")]
    pub tech_foul_count: Option<i32>,
    #[serde(rename = "adjustPoints", skip_serializing_if = "Option::is_none")]
    pub adjust_points: Option<i32>,
    #[serde(rename = "foulPoints", skip_serializing_if = "Option::is_none")]
    pub foul_points: Option<i32>,
    #[serde(rename = "rp", skip_serializing_if = "Option::is_none")]
    pub rp: Option<i32>,
    #[serde(rename = "totalPoints", skip_serializing_if = "Option::is_none")]
    pub total_points: Option<i32>,
}

impl MatchScoreBreakdown2020Alliance {
    pub fn new() -> MatchScoreBreakdown2020Alliance {
        MatchScoreBreakdown2020Alliance {
            init_line_robot1: None,
            endgame_robot1: None,
            init_line_robot2: None,
            endgame_robot2: None,
            init_line_robot3: None,
            endgame_robot3: None,
            auto_cells_bottom: None,
            auto_cells_outer: None,
            auto_cells_inner: None,
            teleop_cells_bottom: None,
            teleop_cells_outer: None,
            teleop_cells_inner: None,
            stage1_activated: None,
            stage2_activated: None,
            stage3_activated: None,
            stage3_target_color: None,
            endgame_rung_is_level: None,
            auto_init_line_points: None,
            auto_cell_points: None,
            auto_points: None,
            teleop_cell_points: None,
            control_panel_points: None,
            endgame_points: None,
            teleop_points: None,
            shield_operational_ranking_point: None,
            shield_energized_ranking_point: None,
            tba_shield_energized_ranking_point_from_foul: None,
            tba_num_robots_hanging: None,
            foul_count: None,
            tech_foul_count: None,
            adjust_points: None,
            foul_points: None,
            rp: None,
            total_points: None,
        }
    }
}
