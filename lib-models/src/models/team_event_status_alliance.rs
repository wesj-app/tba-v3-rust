/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamEventStatusAlliance {
    /// Alliance name, may be null.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Alliance number.
    #[serde(rename = "number")]
    pub number: i32,
    #[serde(rename = "backup", skip_serializing_if = "Option::is_none")]
    pub backup: Option<crate::models::TeamEventStatusAllianceBackup>,
    /// Order the team was picked in the alliance from 0-2, with 0 being alliance captain.
    #[serde(rename = "pick")]
    pub pick: i32,
}

impl TeamEventStatusAlliance {
    pub fn new(number: i32, pick: i32) -> TeamEventStatusAlliance {
        TeamEventStatusAlliance {
            name: None,
            number,
            backup: None,
            pick,
        }
    }
}
