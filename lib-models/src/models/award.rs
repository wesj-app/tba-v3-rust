/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Award {
    /// The name of the award as provided by FIRST. May vary for the same award type.
    #[serde(rename = "name")]
    pub name: String,
    /// Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6
    #[serde(rename = "award_type")]
    pub award_type: i32,
    /// The event_key of the event the award was won at.
    #[serde(rename = "event_key")]
    pub event_key: String,
    /// A list of recipients of the award at the event. May have either a team_key or an awardee, both, or neither (in the case the award wasn't awarded at the event).
    #[serde(rename = "recipient_list")]
    pub recipient_list: Vec<crate::models::AwardRecipient>,
    /// The year this award was won.
    #[serde(rename = "year")]
    pub year: i32,
}

impl Award {
    pub fn new(
        name: String,
        award_type: i32,
        event_key: String,
        recipient_list: Vec<crate::models::AwardRecipient>,
        year: i32,
    ) -> Award {
        Award {
            name,
            award_type,
            event_key,
            recipient_list,
            year,
        }
    }
}
